{"ast":null,"code":"var _jsxFileName = \"/Users/prabh/Desktop/Work/FullStack/fullstack/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Appbar from \"./Appbar\"; // import Card from \"./Card\"\n\nimport Card2 from \"./Card2\";\nimport Displaycard from \"./Displaycard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/student/getAll\", {\n      mode: \"no-cors\"\n    }).then(res => res.json).then(result => {\n      setData(result);\n    });\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Appbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), console.log(data), data.map(elem => {\n      return /*#__PURE__*/_jsxDEV(Displaycard, {\n        name: elem.name,\n        address: elem.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = App;\nexport default App; // const [data, setData] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     useEffect(() => {\n//         const getData = async () => {\n//         try {\n//             const response = await fetch(\n//             `http://localhost:8080/student/getAll`\n//             );\n//             if (!response.ok) {\n//             throw new Error(\n//                 `This is an HTTP error: The status is ${response.status}`\n//             );\n//             }\n//             let actualData = await response.json();\n//             setData(actualData);\n//             setError(null);\n//         } catch(err) {\n//             setError(err.message);\n//             setData(null);\n//         } finally {\n//             setLoading(false);\n//         }  \n//         }\n//         getData()\n//     }, [])\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Appbar","Card2","Displaycard","App","data","setData","fetch","mode","then","res","json","result","console","log","map","elem","name","address"],"sources":["/Users/prabh/Desktop/Work/FullStack/fullstack/src/components/App.jsx"],"sourcesContent":["import React, { useEffect ,useState } from \"react\";\nimport Appbar from \"./Appbar\"\n// import Card from \"./Card\"\nimport Card2 from \"./Card2\"\nimport Displaycard from \"./Displaycard\"\n\nfunction App(){\n\n    const [data, setData] = useState([]);\n    \n    useEffect(() =>{\n        fetch(\"http://localhost:8080/student/getAll\",\n        {\n            mode:\"no-cors\"\n        })\n        .then(res=>res.json)\n        .then((result)=>{\n            setData(result)\n        }\n        )\n    },[])\n    console.log(data);\n\n    return(\n        <div>\n            <Appbar />\n            <Card2 />\n            {console.log(data)}\n            {data.map((elem) =>{\n                return (<Displaycard\n                    name={elem.name}\n                    address={elem.address}\n                />);\n            }\n            )}\n        </div>\n    )\n}\n\n\nexport default App;\n\n// const [data, setData] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         const getData = async () => {\n//         try {\n//             const response = await fetch(\n//             `http://localhost:8080/student/getAll`\n//             );\n//             if (!response.ok) {\n//             throw new Error(\n//                 `This is an HTTP error: The status is ${response.status}`\n//             );\n//             }\n//             let actualData = await response.json();\n//             setData(actualData);\n//             setError(null);\n//         } catch(err) {\n//             setError(err.message);\n//             setData(null);\n//         } finally {\n//             setLoading(false);\n//         }  \n//         }\n//         getData()\n//     }, [])"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,GAAT,GAAc;EAAA;;EAEV,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EAEAD,SAAS,CAAC,MAAK;IACXQ,KAAK,CAAC,sCAAD,EACL;MACIC,IAAI,EAAC;IADT,CADK,CAAL,CAICC,IAJD,CAIMC,GAAG,IAAEA,GAAG,CAACC,IAJf,EAKCF,IALD,CAKOG,MAAD,IAAU;MACZN,OAAO,CAACM,MAAD,CAAP;IACH,CAPD;EASH,CAVQ,EAUP,EAVO,CAAT;EAWAC,OAAO,CAACC,GAAR,CAAYT,IAAZ;EAEA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKQ,OAAO,CAACC,GAAR,CAAYT,IAAZ,CAHL,EAIKA,IAAI,CAACU,GAAL,CAAUC,IAAD,IAAS;MACf,oBAAQ,QAAC,WAAD;QACJ,IAAI,EAAEA,IAAI,CAACC,IADP;QAEJ,OAAO,EAAED,IAAI,CAACE;MAFV;QAAA;QAAA;QAAA;MAAA,QAAR;IAIH,CALA,CAJL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GA/BQd,G;;KAAAA,G;AAkCT,eAAeA,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}