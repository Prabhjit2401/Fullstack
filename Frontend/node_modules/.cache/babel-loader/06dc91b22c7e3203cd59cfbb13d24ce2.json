{"ast":null,"code":"var _jsxFileName = \"/Users/prabh/Desktop/Work/FullStack/fullstack/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Appbar from \"./Appbar\"; // import Card from \"./Card\"\n\nimport Card2 from \"./Card2\";\nimport Displaycard from \"./Displaycard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/student/getAll`, {\n          mode: \"no-cors\"\n        });\n\n        if (!response.ok) {\n          throw new Error(`This is an HTTP error: The status is ${response.status}`);\n        }\n\n        let actualData = await response.json();\n        setData(actualData);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setData(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Appbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), data.map(elem => {\n      return /*#__PURE__*/_jsxDEV(Displaycard, {\n        name: elem.name,\n        address: elem.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this); // return (\n  //     <div>\n  //     <h1>API Posts</h1>\n  //     {loading && <div>A moment please...</div>}\n  //     {error && (\n  //         <div>{`There is a problem fetching the post data - ${error}`}</div>\n  //     )}\n  //         {console.log(data)}\n  //         {data.map(\n  //             (item) =>{\n  //                 return(\n  //                 <Card2\n  //                     key={item.id}\n  //                     name={item.name}\n  //                     />\n  //                     );\n  //             }\n  //         )}\n  //     </div>\n  // );\n} // function App(){\n//     const [list, setList] = useState([]);\n//     function addStudent(newStudent) {\n//         setList(prevList =>{\n//             return [...prevList,newStudent];\n//         });\n//     }\n//     return(\n//         <div>\n//             <Appbar />\n//             <Card2 onAdd={addStudent} />\n//             {list.map((elem) =>{\n//                 return (<Displaycard\n//                     name={elem.name}\n//                     address={elem.address}\n//                  />);\n//             }\n//             )}\n//         </div>\n//     )\n// }\n\n\n_s(App, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Appbar","Card2","Displaycard","App","data","setData","loading","setLoading","error","setError","getData","response","fetch","mode","ok","Error","status","actualData","json","err","message","map","elem","name","address"],"sources":["/Users/prabh/Desktop/Work/FullStack/fullstack/src/components/App.jsx"],"sourcesContent":["import React, { useEffect ,useState } from \"react\";\nimport Appbar from \"./Appbar\"\n// import Card from \"./Card\"\nimport Card2 from \"./Card2\"\nimport Displaycard from \"./Displaycard\"\n\nfunction App(){\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getData = async () => {\n        try {\n            const response = await fetch(\n            `http://localhost:8080/student/getAll`\n            ,{mode : \"no-cors\"}\n            );\n            if (!response.ok) {\n            throw new Error(\n                `This is an HTTP error: The status is ${response.status}`\n            );\n            }\n            let actualData = await response.json();\n            setData(actualData);\n            setError(null);\n        } catch(err) {\n            setError(err.message);\n            setData(null);\n        } finally {\n            setLoading(false);\n        }  \n        }\n        getData()\n    }, [])\n\n    return(\n        <div>\n            <Appbar />\n            <Card2 />\n            {data.map((elem) =>{\n                return (<Displaycard\n                    name={elem.name}\n                    address={elem.address}\n                />);\n            }\n            )}\n        </div>\n    )\n\n    // return (\n    //     <div>\n    //     <h1>API Posts</h1>\n    //     {loading && <div>A moment please...</div>}\n    //     {error && (\n    //         <div>{`There is a problem fetching the post data - ${error}`}</div>\n    //     )}\n        \n    //         {console.log(data)}\n    //         {data.map(\n    //             (item) =>{\n    //                 return(\n    //                 <Card2\n    //                     key={item.id}\n    //                     name={item.name}\n    //                     />\n    //                     );\n    //             }\n    //         )}\n        \n    //     </div>\n    // );\n}\n\n// function App(){\n\n//     const [list, setList] = useState([]);\n\n//     function addStudent(newStudent) {\n//         setList(prevList =>{\n//             return [...prevList,newStudent];\n//         });\n//     }\n\n//     return(\n//         <div>\n//             <Appbar />\n//             <Card2 onAdd={addStudent} />\n//             {list.map((elem) =>{\n//                 return (<Displaycard\n//                     name={elem.name}\n//                     address={elem.address}\n//                  />);\n//             }\n//             )}\n//         </div>\n//     )\n// }\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,GAAT,GAAc;EAAA;;EACV,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMY,OAAO,GAAG,YAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,sCAD2B,EAE3B;UAACC,IAAI,EAAG;QAAR,CAF2B,CAA5B;;QAIA,IAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;UAClB,MAAM,IAAIC,KAAJ,CACD,wCAAuCJ,QAAQ,CAACK,MAAO,EADtD,CAAN;QAGC;;QACD,IAAIC,UAAU,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;QACAb,OAAO,CAACY,UAAD,CAAP;QACAR,QAAQ,CAAC,IAAD,CAAR;MACH,CAbD,CAaE,OAAMU,GAAN,EAAW;QACTV,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;QACAf,OAAO,CAAC,IAAD,CAAP;MACH,CAhBD,SAgBU;QACNE,UAAU,CAAC,KAAD,CAAV;MACH;IACA,CApBD;;IAqBAG,OAAO;EACV,CAvBQ,EAuBN,EAvBM,CAAT;EAyBA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKN,IAAI,CAACiB,GAAL,CAAUC,IAAD,IAAS;MACf,oBAAQ,QAAC,WAAD;QACJ,IAAI,EAAEA,IAAI,CAACC,IADP;QAEJ,OAAO,EAAED,IAAI,CAACE;MAFV;QAAA;QAAA;QAAA;MAAA,QAAR;IAIH,CALA,CAHL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ,CA9BU,CA4CV;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;AACH,C,CAED;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA3FSrB,G;;KAAAA,G;AA6FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}